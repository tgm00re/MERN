{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/CodingDojoAssignments/MERN/FullstackMERN/Authors_Remake/client/src/components/AuthorList.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthorList() {\n  _s();\n\n  let history = useHistory();\n  const [authors, setAuthors] = useState([]);\n  useEffect(() => {\n    let isMounted = true;\n    axios.get(`http://localhost:8000/api/authors/`).then(response => {\n      if (isMounted) {\n        setAuthors(response.data);\n      }\n    }).catch(err => console.log(\"Something went wrong! \", err));\n    return () => {\n      isMounted = false;\n    };\n  }, [authors]);\n\n  function handleDelete(_id, author) {\n    axios.delete(`http://localhost:8000/api/authors/delete/${_id}`, author).then(response => console.log(\"Updated: \", response)).catch(err => console.log(\"Error: \", err));\n  }\n\n  function handleUpdate(_id, author) {\n    history.push(`/update/author/${_id}`); // axios.put(`http://localhost:8000/api/authors/update/${_id}`, author)\n    //     .then(response => console.log(\"Updated: \", response))\n    //     .catch(err => console.log(\"Error: \", err))\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table bg-dark text-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: authors.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              clickFunction: () => handleUpdate(item._id),\n              text: \"update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              clickFunction: handleDelete,\n              _id: item._id,\n              text: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthorList, \"mpHpa5iAh4GcwjuL/vzNurbK2OA=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthorList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorList\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/CodingDojoAssignments/MERN/FullstackMERN/Authors_Remake/client/src/components/AuthorList.js"],"names":["axios","React","useEffect","useState","useHistory","Button","AuthorList","history","authors","setAuthors","isMounted","get","then","response","data","catch","err","console","log","handleDelete","_id","author","delete","handleUpdate","push","map","item","i","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAKA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEjC,MAAIC,OAAO,GAAGH,UAAU,EAAxB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,SAAS,GAAG,IAAhB;AACAV,IAAAA,KAAK,CAACW,GAAN,CAAW,oCAAX,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,UAAGH,SAAH,EAAa;AACTD,QAAAA,UAAU,CAACI,QAAQ,CAACC,IAAV,CAAV;AACH;AACJ,KALD,EAMCC,KAND,CAMOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,GAAtC,CANd;AAOA,WAAO,MAAM;AAAEN,MAAAA,SAAS,GAAG,KAAZ;AAAmB,KAAlC;AACH,GAVQ,EAUN,CAACF,OAAD,CAVM,CAAT;;AAYA,WAASW,YAAT,CAAsBC,GAAtB,EAA2BC,MAA3B,EAAkC;AAC9BrB,IAAAA,KAAK,CAACsB,MAAN,CAAc,4CAA2CF,GAAI,EAA7D,EAAgEC,MAAhE,EACKT,IADL,CACUC,QAAQ,IAAII,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,QAAzB,CADtB,EAEKE,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB,CAFlB;AAGH;;AAED,WAASO,YAAT,CAAsBH,GAAtB,EAA2BC,MAA3B,EAAkC;AAC7Bd,IAAAA,OAAO,CAACiB,IAAR,CAAc,kBAAiBJ,GAAI,EAAnC,EAD6B,CAG9B;AACA;AACA;AACH;;AAGD,sBACI;AAAO,IAAA,SAAS,EAAC,0BAAjB;AAAA,4BACJ;AAAA,6BACA;AAAA,gCACI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADI,eAOJ;AAAA,gBACKZ,OAAO,CAACiB,GAAR,CAAY,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtB,4BACI;AAAA,kCACI;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,aAAa,EAAE,MAAML,YAAY,CAACG,IAAI,CAACN,GAAN,CAAzC;AAAqD,cAAA,IAAI,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,aAAa,EAAED,YAAvB;AAAqC,cAAA,GAAG,EAAEO,IAAI,CAACN,GAA/C;AAAoD,cAAA,IAAI,EAAE;AAA1D;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAASO,CAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVA;AADL;AAAA;AAAA;AAAA;AAAA,YAPI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GAtDuBrB,U;UAENF,U;;;KAFME,U","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState, } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport Button from './Button';\n\n\n\n\nexport default function AuthorList() {\n\n    let history = useHistory();\n    const [authors, setAuthors] = useState([])\n    useEffect(() => {\n        let isMounted = true;\n        axios.get(`http://localhost:8000/api/authors/`)\n        .then(response => {\n            if(isMounted){\n                setAuthors(response.data)\n            }\n        })\n        .catch(err => console.log(\"Something went wrong! \", err))\n        return () => { isMounted = false }\n    }, [authors])\n\n    function handleDelete(_id, author){\n        axios.delete(`http://localhost:8000/api/authors/delete/${_id}`, author)\n            .then(response => console.log(\"Updated: \", response))\n            .catch(err => console.log(\"Error: \", err))\n    }\n\n    function handleUpdate(_id, author){\n         history.push(`/update/author/${_id}`)\n\n        // axios.put(`http://localhost:8000/api/authors/update/${_id}`, author)\n        //     .then(response => console.log(\"Updated: \", response))\n        //     .catch(err => console.log(\"Error: \", err))\n    }\n\n\n    return (\n        <table className=\"table bg-dark text-light\">\n    <thead>\n    <tr>\n        <th scope=\"col\">Author</th>\n        <th scope=\"col\">Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n        {authors.map((item, i) => {\n            return(\n                <tr key={i}>\n                    <td>{item.name}</td>\n                    <td>\n                        <Button clickFunction={() => handleUpdate(item._id)} text={\"update\"}/>\n                        <Button clickFunction={handleDelete} _id={item._id} text={\"delete\"}/>\n                    </td>\n                </tr>\n            )\n        })}\n    </tbody>\n</table>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}