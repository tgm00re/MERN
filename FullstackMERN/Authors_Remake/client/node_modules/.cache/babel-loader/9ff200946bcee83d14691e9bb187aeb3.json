{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/CodingDojoAssignments/MERN/FullstackMERN/Authors_Remake/client/src/components/AuthorUpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport AuthorForm from './AuthorForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthorUpdateForm(props) {\n  _s();\n\n  const {\n    _id\n  } = props;\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    let isMounted = true;\n    axios.get(`http://localhost:8000/api/authors/${_id}`).then(product => {\n      if (isMounted) {\n        setName(product.data.name);\n      }\n    }).catch(err => console.log(\"Error: \", err));\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  function updateAuthor(author) {}\n\n  return /*#__PURE__*/_jsxDEV(AuthorForm, {\n    submitFunction: updateAuthor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthorUpdateForm, \"yFX/thdr3dMdWKRwvTuphhEy2lc=\");\n\n_c = AuthorUpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorUpdateForm\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/CodingDojoAssignments/MERN/FullstackMERN/Authors_Remake/client/src/components/AuthorUpdateForm.js"],"names":["React","useEffect","useState","useParams","AuthorForm","axios","AuthorUpdateForm","props","_id","name","setName","isMounted","get","then","product","data","catch","err","console","log","updateAuthor","author"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC5C,QAAM;AAACC,IAAAA;AAAD,MAAQD,KAAd;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,SAAS,GAAG,IAAhB;AACAN,IAAAA,KAAK,CAACO,GAAN,CAAW,qCAAoCJ,GAAI,EAAnD,EACCK,IADD,CACMC,OAAO,IAAI;AACb,UAAGH,SAAH,EAAa;AACTD,QAAAA,OAAO,CAACI,OAAO,CAACC,IAAR,CAAaN,IAAd,CAAP;AACH;AACJ,KALD,EAMCO,KAND,CAMOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB,CANd;AAQA,WAAO,MAAM;AAACN,MAAAA,SAAS,GAAG,KAAZ;AAAkB,KAAhC;AACH,GAXQ,EAWN,EAXM,CAAT;;AAcA,WAASS,YAAT,CAAsBC,MAAtB,EAA6B,CAE5B;;AAED,sBACI,QAAC,UAAD;AAAY,IAAA,cAAc,EAAED;AAA5B;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAzBuBd,gB;;KAAAA,gB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport AuthorForm from './AuthorForm'\nimport axios from 'axios';\n\nexport default function AuthorUpdateForm(props) {\n    const {_id} = props;\n    const [name, setName] = useState(\"\");\n\n    useEffect(() => {\n        let isMounted = true;\n        axios.get(`http://localhost:8000/api/authors/${_id}`)\n        .then(product => {\n            if(isMounted){ \n                setName(product.data.name)\n            }\n        })\n        .catch(err => console.log(\"Error: \", err))\n\n        return () => {isMounted = false};\n    }, [])\n\n\n    function updateAuthor(author){\n        \n    }\n\n    return (\n        <AuthorForm submitFunction={updateAuthor}/>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}