{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/CodingDojoAssignments/MERN/FullstackMERN/Authors_Remake/client/src/components/AuthorUpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport AuthorForm from './AuthorForm';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthorUpdateForm(props) {\n  _s();\n\n  const {\n    _id\n  } = useParams();\n  const [name, setName] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [found, setFound] = useState(false);\n  useEffect(() => {\n    let isMounted = true;\n    console.log(`http://localhost:8000/api/authors/${_id}`);\n    axios.get(`http://localhost:8000/api/authors/${_id}`).then(response => {\n      console.log(response);\n\n      if (isMounted && !Object.keys(response.data).includes('error')) {\n        setName(response.data.name);\n        console.log(\"setting found to true!\");\n        setFound(true);\n      }\n    }).catch(err => console.log(\"Error: \", err));\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  function updateAuthor(e, author) {\n    e.preventDefault();\n    axios.put(`http://localhost:8000/api/authors/update/${_id}`, author).then(res => console.log(\"Response: \", res)).catch(err => {\n      console.log(err.response.data.errors);\n      const errorResponse = err.response.data.errors; //Get the errors from err.response.data\n\n      const errorArr = [];\n\n      for (const key of Object.keys(errorResponse)) {\n        errorArr.push(errorResponse[key].message);\n      }\n\n      setErrors(errorArr);\n    });\n  }\n\n  console.log(found);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: found ? /*#__PURE__*/_jsxDEV(AuthorForm, {\n      submitFunction: updateAuthor,\n      initialName: name,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Sorry, that author can't be found!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 53\n      }, this), \"Please Return home or\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 79\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create/author\",\n        className: \"text-warning\",\n        children: \"Create An Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthorUpdateForm, \"s0zVLsqps8MWaJax1Pg8lamnDWk=\", false, function () {\n  return [useParams];\n});\n\n_c = AuthorUpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorUpdateForm\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/CodingDojoAssignments/MERN/FullstackMERN/Authors_Remake/client/src/components/AuthorUpdateForm.js"],"names":["React","useEffect","useState","useParams","AuthorForm","axios","Link","AuthorUpdateForm","props","_id","name","setName","errors","setErrors","found","setFound","isMounted","console","log","get","then","response","Object","keys","data","includes","catch","err","updateAuthor","e","author","preventDefault","put","res","errorResponse","errorArr","key","push","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport AuthorForm from './AuthorForm'\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nexport default function AuthorUpdateForm(props) {\n    const {_id} = useParams();\n    const [name, setName] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [found, setFound] = useState(false)\n\n    useEffect(() => {\n        let isMounted = true;\n        console.log(`http://localhost:8000/api/authors/${_id}`);\n        axios.get(`http://localhost:8000/api/authors/${_id}`)\n        .then(response => {\n            console.log(response);\n            if(isMounted && !Object.keys(response.data).includes('error')){ \n                setName(response.data.name)\n                console.log(\"setting found to true!\")\n                setFound(true);\n            }\n        })\n        .catch(err => console.log(\"Error: \", err))\n\n        return () => {isMounted = false};\n    }, [])\n\n\n    function updateAuthor(e, author){\n        e.preventDefault();\n        axios.put(`http://localhost:8000/api/authors/update/${_id}`, author)\n            .then(res => console.log(\"Response: \", res))\n            .catch(err => {\n                console.log(err.response.data.errors);\n                const errorResponse = err.response.data.errors; //Get the errors from err.response.data\n                const errorArr = [];\n                for(const key of Object.keys(errorResponse)){\n                    errorArr.push(errorResponse[key].message);\n                }\n                setErrors(errorArr);\n            })\n    }\n\n    console.log(found);\n\n    return (\n        <div>\n            {found ? <AuthorForm submitFunction={updateAuthor} initialName={name} errors={errors}/> \n            : <p> Sorry, that author can't be found!<br/>Please Return home or<br/>\n                        <Link to=\"/create/author\" className=\"text-warning\">Create An Author</Link>\n            </p>}\n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}