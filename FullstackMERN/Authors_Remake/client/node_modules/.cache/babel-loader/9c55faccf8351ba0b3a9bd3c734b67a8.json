{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/CodingDojoAssignments/MERN/FullstackMERN/Authors_Remake/client/src/views/Main.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport AuthorForm from '../components/AuthorForm';\nimport AuthorList from '../components/AuthorList';\nimport AuthorUpdateForm from '../components/AuthorUpdateForm';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  //create arraya to store errors from the API\n  const [errors, setErrors] = useState([]);\n\n  function createAuthor(e, author) {\n    e.preventDefault();\n    axios.post(\"http://localhost:8000/api/authors/create\", author).then(response => console.log(response)).catch(err => {\n      console.log(err.response.data.errors);\n      const errorResponse = err.response.data.errors; //Get the errors from err.response.data\n\n      const errorArr = [];\n\n      for (const key of Object.keys(errorResponse)) {\n        errorArr.push(errorResponse[key].message);\n      }\n\n      setErrors(errorArr);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Favorite Authors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 container bg-secondary\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/create/author\",\n            className: \"text-warning\",\n            children: \"Create An Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mt-5\",\n            children: \"Authors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AuthorList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/create/author\",\n          children: /*#__PURE__*/_jsxDEV(AuthorForm, {\n            submitFunction: createAuthor,\n            initialName: \"\",\n            errors: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/update/author/:_id\",\n          children: /*#__PURE__*/_jsxDEV(AuthorUpdateForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"m776+Cbg+sTbTdnw1jnYcDWVlDI=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/CodingDojoAssignments/MERN/FullstackMERN/Authors_Remake/client/src/views/Main.js"],"names":["axios","React","Switch","Route","Link","AuthorForm","AuthorList","AuthorUpdateForm","useState","Main","errors","setErrors","createAuthor","e","author","preventDefault","post","then","response","console","log","catch","err","data","errorResponse","errorArr","key","Object","keys","push","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,kBAApC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE3B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASI,YAAT,CAAsBC,CAAtB,EAAyBC,MAAzB,EAAgC;AAC5BD,IAAAA,CAAC,CAACE,cAAF;AACAf,IAAAA,KAAK,CAACgB,IAAN,CAAW,0CAAX,EAAuDF,MAAvD,EACKG,IADL,CACUC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CADtB,EAEKG,KAFL,CAEWC,GAAG,IAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACJ,QAAJ,CAAaK,IAAb,CAAkBb,MAA9B;AACA,YAAMc,aAAa,GAAGF,GAAG,CAACJ,QAAJ,CAAaK,IAAb,CAAkBb,MAAxC,CAFU,CAEsC;;AAChD,YAAMe,QAAQ,GAAG,EAAjB;;AACA,WAAI,MAAMC,GAAV,IAAiBC,MAAM,CAACC,IAAP,CAAYJ,aAAZ,CAAjB,EAA4C;AACxCC,QAAAA,QAAQ,CAACI,IAAT,CAAcL,aAAa,CAACE,GAAD,CAAb,CAAmBI,OAAjC;AACH;;AACDnB,MAAAA,SAAS,CAACc,QAAD,CAAT;AACH,KAVL;AAWH;;AAKD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,gBAAT;AAA0B,YAAA,SAAS,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,gBAAlB;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,cAAc,EAAEb,YAA5B;AAA0C,YAAA,WAAW,EAAE,EAAvD;AAA2D,YAAA,MAAM,EAAEF;AAAnE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ,eASI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,qBAAlB;AAAA,iCACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA5CuBD,I;;KAAAA,I","sourcesContent":["import axios from 'axios';\nimport React from 'react'\nimport { Switch, Route, Link } from 'react-router-dom';\nimport AuthorForm from '../components/AuthorForm';\nimport AuthorList from '../components/AuthorList';\nimport AuthorUpdateForm from '../components/AuthorUpdateForm';\nimport { useState } from 'react';\n\n\nexport default function Main() {\n\n    //create arraya to store errors from the API\n    const [errors, setErrors] = useState([]);\n\n    function createAuthor(e, author){\n        e.preventDefault();\n        axios.post(\"http://localhost:8000/api/authors/create\", author)\n            .then(response => console.log(response))\n            .catch(err => {\n                console.log(err.response.data.errors);\n                const errorResponse = err.response.data.errors; //Get the errors from err.response.data\n                const errorArr = [];\n                for(const key of Object.keys(errorResponse)){\n                    errorArr.push(errorResponse[key].message);\n                }\n                setErrors(errorArr);\n            })\n    }\n\n    \n\n\n    return (\n        <div>\n            <h1>Favorite Authors</h1>\n            <Link to=\"/\">Home</Link>\n            <div className=\"p-4 container bg-secondary\">\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Link to=\"/create/author\" className=\"text-warning\">Create An Author</Link>\n                        <h2 className=\"mt-5\">Authors</h2>\n                        <AuthorList/>\n                    </Route>\n                    <Route exact path=\"/create/author\">\n                        <AuthorForm submitFunction={createAuthor} initialName={\"\"} errors={errors}/>\n                    </Route>\n                    <Route exact path=\"/update/author/:_id\">\n                        <AuthorUpdateForm/>\n                    </Route>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}