{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/CodingDojoAssignments/MERN/FullstackMERN/Authors_Remake/client/src/components/AuthorUpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport AuthorForm from './AuthorForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthorUpdateForm(props) {\n  _s();\n\n  const {\n    _id\n  } = useParams();\n  const [name, setName] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [found, setFound] = useState(false);\n  useEffect(() => {\n    let isMounted = true;\n    console.log(`http://localhost:8000/api/authors/${_id}`);\n    axios.get(`http://localhost:8000/api/authors/${_id}`).then(response => {\n      if (isMounted) {\n        setName(response.data.name);\n      }\n    }).catch(err => console.log(\"Error: \", err));\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  function updateAuthor(e, author) {\n    e.preventDefault();\n    axios.put(`http://localhost:8000/api/authors/update/${_id}`, author).then(res => console.log(\"Response: \", res)).catch(err => {\n      console.log(err.response.data.errors);\n      const errorResponse = err.response.data.errors; //Get the errors from err.response.data\n\n      const errorArr = [];\n\n      for (const key of Object.keys(errorResponse)) {\n        errorArr.push(errorResponse[key].message);\n      }\n\n      setErrors(errorArr);\n    });\n  }\n\n  console.log(found);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: found\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), found ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" not found sorrylol \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"found c:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(AuthorForm, {\n      submitFunction: updateAuthor,\n      initialName: name,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthorUpdateForm, \"s0zVLsqps8MWaJax1Pg8lamnDWk=\", false, function () {\n  return [useParams];\n});\n\n_c = AuthorUpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorUpdateForm\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/CodingDojoAssignments/MERN/FullstackMERN/Authors_Remake/client/src/components/AuthorUpdateForm.js"],"names":["React","useEffect","useState","useParams","AuthorForm","axios","AuthorUpdateForm","props","_id","name","setName","errors","setErrors","found","setFound","isMounted","console","log","get","then","response","data","catch","err","updateAuthor","e","author","preventDefault","put","res","errorResponse","errorArr","key","Object","keys","push","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC5C,QAAM;AAACC,IAAAA;AAAD,MAAQL,SAAS,EAAvB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,SAAS,GAAG,IAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,qCAAoCT,GAAI,EAArD;AACAH,IAAAA,KAAK,CAACa,GAAN,CAAW,qCAAoCV,GAAI,EAAnD,EACCW,IADD,CACMC,QAAQ,IAAI;AACd,UAAGL,SAAH,EAAa;AACTL,QAAAA,OAAO,CAACU,QAAQ,CAACC,IAAT,CAAcZ,IAAf,CAAP;AACH;AACJ,KALD,EAMCa,KAND,CAMOC,GAAG,IAAIP,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBM,GAAvB,CANd;AAQA,WAAO,MAAM;AAACR,MAAAA,SAAS,GAAG,KAAZ;AAAkB,KAAhC;AACH,GAZQ,EAYN,EAZM,CAAT;;AAeA,WAASS,YAAT,CAAsBC,CAAtB,EAAyBC,MAAzB,EAAgC;AAC5BD,IAAAA,CAAC,CAACE,cAAF;AACAtB,IAAAA,KAAK,CAACuB,GAAN,CAAW,4CAA2CpB,GAAI,EAA1D,EAA6DkB,MAA7D,EACKP,IADL,CACUU,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BY,GAA1B,CADjB,EAEKP,KAFL,CAEWC,GAAG,IAAI;AACVP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACH,QAAJ,CAAaC,IAAb,CAAkBV,MAA9B;AACA,YAAMmB,aAAa,GAAGP,GAAG,CAACH,QAAJ,CAAaC,IAAb,CAAkBV,MAAxC,CAFU,CAEsC;;AAChD,YAAMoB,QAAQ,GAAG,EAAjB;;AACA,WAAI,MAAMC,GAAV,IAAiBC,MAAM,CAACC,IAAP,CAAYJ,aAAZ,CAAjB,EAA4C;AACxCC,QAAAA,QAAQ,CAACI,IAAT,CAAcL,aAAa,CAACE,GAAD,CAAb,CAAmBI,OAAjC;AACH;;AACDxB,MAAAA,SAAS,CAACmB,QAAD,CAAT;AACH,KAVL;AAWH;;AAEDf,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,sBACI;AAAA,4BACI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKA,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF3C,eAGI,QAAC,UAAD;AAAY,MAAA,cAAc,EAAEW,YAA5B;AAA0C,MAAA,WAAW,EAAEf,IAAvD;AAA6D,MAAA,MAAM,EAAEE;AAArE;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA7CuBL,gB;UACNH,S;;;KADMG,gB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport AuthorForm from './AuthorForm'\nimport axios from 'axios';\n\nexport default function AuthorUpdateForm(props) {\n    const {_id} = useParams();\n    const [name, setName] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [found, setFound] = useState(false)\n\n    useEffect(() => {\n        let isMounted = true;\n        console.log(`http://localhost:8000/api/authors/${_id}`);\n        axios.get(`http://localhost:8000/api/authors/${_id}`)\n        .then(response => {\n            if(isMounted){ \n                setName(response.data.name)\n            }\n        })\n        .catch(err => console.log(\"Error: \", err))\n\n        return () => {isMounted = false};\n    }, [])\n\n\n    function updateAuthor(e, author){\n        e.preventDefault();\n        axios.put(`http://localhost:8000/api/authors/update/${_id}`, author)\n            .then(res => console.log(\"Response: \", res))\n            .catch(err => {\n                console.log(err.response.data.errors);\n                const errorResponse = err.response.data.errors; //Get the errors from err.response.data\n                const errorArr = [];\n                for(const key of Object.keys(errorResponse)){\n                    errorArr.push(errorResponse[key].message);\n                }\n                setErrors(errorArr);\n            })\n    }\n\n    console.log(found);\n\n    return (\n        <div>\n            <p>{found}</p>\n            {found ? <p> not found sorrylol </p> : <p>found c:</p>}\n            <AuthorForm submitFunction={updateAuthor} initialName={name} errors={errors}/>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}