{"ast":null,"code":"var _jsxFileName = \"/Users/thomasmoore/Documents/CodingDojoAssignments/MERN/FullstackMERN/Authors_Remake/client/src/components/AuthorUpdateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport AuthorForm from './AuthorForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthorUpdateForm(props) {\n  _s();\n\n  const {\n    _id\n  } = useParams();\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    let isMounted = true;\n    console.log(`http://localhost:8000/api/authors/${_id}`);\n    axios.get(`http://localhost:8000/api/authors/${_id}`).then(response => {\n      if (isMounted) {\n        console.log(response.data.name);\n        setName(response.data.name);\n      }\n    }).catch(err => console.log(\"Error: \", err));\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  function updateAuthor(e, author) {\n    e.preventDefault();\n    axios.put(`http://localhost:8000/api/authors/update/${_id}`, author).then(res => console.log(\"Response: \", res)).catch(err => console.log(\"Error: \", err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthorForm, {\n    submitFunction: updateAuthor,\n    initialName: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthorUpdateForm, \"PdIQ4+aDrnwl8sqc41mCoCv8YrU=\", false, function () {\n  return [useParams];\n});\n\n_c = AuthorUpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorUpdateForm\");","map":{"version":3,"sources":["/Users/thomasmoore/Documents/CodingDojoAssignments/MERN/FullstackMERN/Authors_Remake/client/src/components/AuthorUpdateForm.js"],"names":["React","useEffect","useState","useParams","AuthorForm","axios","AuthorUpdateForm","props","_id","name","setName","isMounted","console","log","get","then","response","data","catch","err","updateAuthor","e","author","preventDefault","put","res"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC5C,QAAM;AAACC,IAAAA;AAAD,MAAQL,SAAS,EAAvB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,SAAS,GAAG,IAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,qCAAoCL,GAAI,EAArD;AACAH,IAAAA,KAAK,CAACS,GAAN,CAAW,qCAAoCN,GAAI,EAAnD,EACCO,IADD,CACMC,QAAQ,IAAI;AACd,UAAGL,SAAH,EAAa;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAAT,CAAcR,IAA1B;AACAC,QAAAA,OAAO,CAACM,QAAQ,CAACC,IAAT,CAAcR,IAAf,CAAP;AACH;AACJ,KAND,EAOCS,KAPD,CAOOC,GAAG,IAAIP,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBM,GAAvB,CAPd;AASA,WAAO,MAAM;AAACR,MAAAA,SAAS,GAAG,KAAZ;AAAkB,KAAhC;AACH,GAbQ,EAaN,EAbM,CAAT;;AAgBA,WAASS,YAAT,CAAsBC,CAAtB,EAAyBC,MAAzB,EAAgC;AAC5BD,IAAAA,CAAC,CAACE,cAAF;AACAlB,IAAAA,KAAK,CAACmB,GAAN,CAAW,4CAA2ChB,GAAI,EAA1D,EAA6Dc,MAA7D,EACKP,IADL,CACUU,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BY,GAA1B,CADjB,EAEKP,KAFL,CAEWC,GAAG,IAAIP,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBM,GAAvB,CAFlB;AAGH;;AAED,sBACI,QAAC,UAAD;AAAY,IAAA,cAAc,EAAEC,YAA5B;AAA0C,IAAA,WAAW,EAAEX;AAAvD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GA9BuBH,gB;UACNH,S;;;KADMG,gB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport AuthorForm from './AuthorForm'\nimport axios from 'axios';\n\nexport default function AuthorUpdateForm(props) {\n    const {_id} = useParams();\n    const [name, setName] = useState(\"\");\n\n    useEffect(() => {\n        let isMounted = true;\n        console.log(`http://localhost:8000/api/authors/${_id}`);\n        axios.get(`http://localhost:8000/api/authors/${_id}`)\n        .then(response => {\n            if(isMounted){ \n                console.log(response.data.name);\n                setName(response.data.name)\n            }\n        })\n        .catch(err => console.log(\"Error: \", err))\n\n        return () => {isMounted = false};\n    }, [])\n\n\n    function updateAuthor(e, author){\n        e.preventDefault();\n        axios.put(`http://localhost:8000/api/authors/update/${_id}`, author)\n            .then(res => console.log(\"Response: \", res))\n            .catch(err => console.log(\"Error: \", err))\n    }\n\n    return (\n        <AuthorForm submitFunction={updateAuthor} initialName={name}/>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}